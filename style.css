* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  width: 100%;
}

body {
  background: black;
  display: flex;
  flex-direction: column;
  /* gap: 5vh; */
  justify-content: space-between;
  align-items: center;
  /* background-attachment: fixed; */
}

.clock {
  /* height: 30vh; */
  color: white;
  font-family: "Noto Sans KR";
  padding: 0;
  /* line-height: 30vh; */
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  /*background: green;*/
  overflow: hidden;
}

.clock_time {
  flex-direction: column;
}

/* 
.clock::after {
  bottom: 0;
  background: linear-gradient(to bottom, transparent, black);
} */

.clock > div {
  display: flex;
}

.clock_date {
  /* height: 5vw; */
  color: white;
  /* line-height: 20vh; */
}

.tick2 {
  margin-right: 10px;
  /* line-height: 17vh; */
}

.LTxt {
  font-size: 30vh;
  line-height: 1;
}

.MTxt {
  font-size: 12vh;
}

.STxt {
  font-size: 7vh;
}

.XSTxt {
  font-size: 3vh;
}

.tick-hidden {
  opacity: 0;
}

.ampm {
  height: 10vh;
  font-size: 5vh;
  display: flex;
  flex-direction: row;
  justify-content: stretch;
  align-content: center;
  color: white;
  width: 100%;
  border-bottom: 5px solid white;
}

.am,
.pm {
  flex-grow: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Styles for landscape mode */
@media screen and (orientation: landscape) {
  /* CSS rules for landscape mode */
  .clock_time {
    flex-direction: row;
    justify-content: space-around;
    width: 100%;
  }

  .LTxt {
    font-size: 40vh;
    line-height: 1;
  }

  .MTxt {
    font-size: 20vh;
  }

  .STxt {
    font-size: 14vh;
  }

  .XSTxt {
    font-size: 6vh;
  }
}

/* Styles for portrait mode */
@media screen and (orientation: portrait) {
  /* CSS rules for portrait mode */
  .clock_time {
    flex-direction: column;
  }

  .LTxt {
    font-size: 30vh;
    line-height: 1;
  }

  .MTxt {
    font-size: 12vh;
  }

  .STxt {
    font-size: 7vh;
  }

  .XSTxt {
    font-size: 3vh;
  }
}
/* .move {
  animation: move linear 1s infinite;
}

@keyframes move {
  from {
    transform: translateY(0vh);
  }
  to {
    transform: translateY(-20vh);
  }
} */
